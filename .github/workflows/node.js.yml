name: Node.js CI

on:
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: docker.io
  REPO: mafumo/recipe
  CONTAINER: node-service
  USR: mafumo
  PWD: m@fumo1412

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        #node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm run test
    - run: npm run test:cov
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v2
      with:
          projectBaseDir: .
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_SCANNER_OPTS: >
            -Dsonar.projectKey=Mauricio-Fuentes_service-recipe
            -Dsonar.organization=mauricio-fuentes
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.sources=src
            -Dsonar.exclusions=node_modules/**
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml

  push_to_registry:
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Push to GitHub Packages
        uses: docker/build-push-action@v2
        with:
          #username: ${{ github.actor }}
          #password: ${{ secrets.TOKEN_GITHUB }}
          username: ${{ env.USR }}
          password: ${{ env.PWD }}
          registry: ${{ env.REGISTRY }}
          repository: ${{ env.REPO }}
          tag: ${{ env.IMAGE_TAG }}
  deploy:
    needs: [push_to_registry]
    name: Deploy to DigitalOcean
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH connection
        uses: webfactory/ssh-agent@v0.5.1
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Update Ubuntu - Docker
        run: |
           ssh ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} << 'EOF'
             sudo apt-get update
             sudo apt-get install -y docker.io
             sudo systemctl enable --now docker
           EOF
           
      - name: Login to the GitHub Packages Docker Registry
        run: ssh ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} "docker login ${{env.REGISTRY}} -u ${{env.USR}} -p ${{env.PWD}}"
        #run: ssh ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} "docker login ${{env.REGISTRY}} -u ${{github.actor}} -p ${{secrets.GITHUB_TOKEN}}"

      - name: Pull latest container
        run: |
          ssh ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} "docker pull ${{env.REGISTRY}}/${{env.REPO}}:1.0.0"

      - name: Start docker container
        run: |
          ssh ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} "docker run -p 3000:8080 -d --name=${{env.CONTAINER}} ${{env.REGISTRY}}/${{env.REPO}}:1.0.0"

      - name: Logout from the GitHub Packages Docker Registry
        run: ssh ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} "docker logout ${{env.REGISTRY}}"